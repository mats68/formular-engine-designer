/**
 * Next-Gen App API
 * Die REST Web-Schnittstelle zu der Next-Gen App Anwendung
 *
 * The version of the OpenAPI document: v1
 * Contact: info@brunnerinformatik.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { EFormularBeilageDTO } from '../model/models';
import { EFormularDTO } from '../model/models';
import { FormularKategorieDTO } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface EFormulareServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Löscht eine Formularbeilage der Elektro Sparte.
     * TODO: Nur mit Status xyz möglich!
     * @param guid Die GUID der zu löschenden Formularbeilage.
     */
    apiV1EFormulareAttachmentsGuidDelete(guid: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Ruft eine Formularbeilage aus der Elektro-Sparte ab.
     * 
     * @param guid Die GUID der abzurufenden Formularbeilage.
     */
    apiV1EFormulareAttachmentsGuidGet(guid: string, extraHttpRequestParams?: any): Observable<EFormularDTO>;

    /**
     * 
     * 
     * @param guid 
     */
    apiV1EFormulareAttachmentsGuidObjectGet(guid: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * 
     * 
     * @param guid 
     * @param dokument Der Datenstrom des/der hoch zu ladenden Dokumentobjektes/-Datei.
     * @param dokumentTyp Die Dokumenttyp-GUID des hoch geladenen Dokumentes.
     * @param overwrite Bestehendes Dokument - Objekt / Datei überschreiben.
     */
    apiV1EFormulareAttachmentsGuidObjectPost(guid: string, dokument: Blob, dokumentTyp?: string, overwrite?: boolean, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Erstellt oder speichert ein Formular in der Elektro Sparte.
     * 
     * @param fileName OriginalName des Dokuments
     * @param parcelNr Grundstück-Nr.
     * @param bfsNr Gemeinde-Nr.
     * @param egrid Eidg. Grundstück-ID (EGRID)
     * @param eFormularBeilageDTO Das Formularbeilage DTO Objekt, welches die Daten der zu erstellenden/speichernden Formularbeilage enthält.
     */
    apiV1EFormulareAttachmentsParcelPost(fileName?: string, parcelNr?: number, bfsNr?: number, egrid?: string, eFormularBeilageDTO?: EFormularBeilageDTO, extraHttpRequestParams?: any): Observable<EFormularDTO>;

    /**
     * Erstellt oder speichert ein Formular in der Elektro Sparte.
     * 
     * @param eFormularBeilageDTO Das Formularbeilage DTO Objekt, welches die Daten der zu erstellenden/speichernden Formularbeilage enthält.
     */
    apiV1EFormulareAttachmentsPost(eFormularBeilageDTO?: EFormularBeilageDTO, extraHttpRequestParams?: any): Observable<EFormularDTO>;

    /**
     * 
     * 
     * @param guid 
     */
    apiV1EFormulareCategoryguidGet(guid: string, extraHttpRequestParams?: any): Observable<FormularKategorieDTO>;

    /**
     * Löscht ein Formular der Elektro Sparte.
     * TODO: Nur mit Status xyz möglich!
     * @param guid Die GUID des zu löschenden Formulars.
     */
    apiV1EFormulareGuidDelete(guid: string, extraHttpRequestParams?: any): Observable<{}>;

    /**
     * Ruft ein Formular aus der Elektro-Sparte ab.
     * 
     * @param guid Die GUID des abzurufenden Formulars.
     */
    apiV1EFormulareGuidGet(guid: string, extraHttpRequestParams?: any): Observable<EFormularDTO>;

    /**
     * Erstellt oder speichert ein Formular in der Elektro Sparte.
     * Diese Aktion speichert ausschliesslich das Formular und ignoriert jegliche Formularbeilagen!!!
     * @param eFormularDTO Das Formular DTO Objekt, welches die Daten des zu erstellenden/speichernden Formulars enthält.
     */
    apiV1EFormularePost(eFormularDTO?: EFormularDTO, extraHttpRequestParams?: any): Observable<EFormularDTO>;

    /**
     * Druckt ein Formular aus der Elektro-Sparte aus.
     * 
     * @param pdfTemplate Wenn das Formular mittels einem PDF Template gedruckt werden soll, kann dessen GUID mit diesem Parameter  spezifiziert werden. Wird dieser Parameter nicht spezifiziert, wird das Formular stattdessen über den M2-Hub  Ausgedruckt.
     * @param eFormularDTO Das Formular DTO Objekt welches das gespeicherte und zu druckende Formular referenziert, oder eine komplettes  Formular DTO Objekt mit den zu druckenden Daten.
     */
    apiV1EFormularePrintPost(pdfTemplate?: string, eFormularDTO?: EFormularDTO, extraHttpRequestParams?: any): Observable<Blob>;

    /**
     * Sendet ein Formular an den angegebenen Empfänger
     * 
     * @param receiver Die Guid des konkreten Empfängers.
     * @param eFormularDTO Das Formular DTO Objekt welches das gespeicherte und zu sendende Formular referenziert, oder eine komplettes  Formular DTO Objekt mit den zu sendenden Daten.
     */
    apiV1EFormulareSendPost(receiver?: string, eFormularDTO?: EFormularDTO, extraHttpRequestParams?: any): Observable<EFormularDTO>;

    /**
     * Überprüft, ob das Formular zu versendet werden kann.
     * 
     * @param receiver Die Guid des konkreten Empfängers.
     * @param eFormularDTO Das Formular DTO Objekt welches das gespeicherte und zu sendende Formular referenziert, oder eine komplettes  Formular DTO Objekt mit den zu sendenden Daten.
     */
    apiV1EFormulareValidatePost(receiver?: string, eFormularDTO?: EFormularDTO, extraHttpRequestParams?: any): Observable<EFormularDTO>;

}
