/**
 * Next-Gen App API
 * Die REST Web-Schnittstelle zu der Next-Gen App Anwendung
 *
 * The version of the OpenAPI document: v1
 * Contact: info@brunnerinformatik.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { EmpfaengerDTO } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface EmpfaengerServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Ruft den Empfänger mit der spezifizierten GUID ab.
     * 
     * @param guid Die GUID des Empfängers.
     */
    apiV1EmpfaengerGuidGet(guid: string, extraHttpRequestParams?: any): Observable<EmpfaengerDTO>;

    /**
     * Gibt alle Empfänger zurück für die spezifizierte Empfängerkategorie.
     * 
     * @param kat Guid der Empfängerkategorie.
     */
    apiV1EmpfaengerKategorieGet(kat?: string, extraHttpRequestParams?: any): Observable<Array<EmpfaengerDTO>>;

    /**
     * Ruft alle Empfänger ab, welche an der spezifizierten Postleitzahl bzw. deren Gemeinden operieren.
     * 
     * @param plz 
     */
    apiV1EmpfaengerPlzGet(plz?: string, extraHttpRequestParams?: any): Observable<Array<EmpfaengerDTO>>;

    /**
     * Sucht nach Empfängern in den verschiedenen Feldern (Werk, Firma, Adresse, Stichwort, Email usw.) mittels Suchbegriff.
     * 
     * @param text Suchbegriff, nach welchem gesucht werden soll. Der Text soll nicht leer sein.
     */
    apiV1EmpfaengerSuchenGet(text?: string, extraHttpRequestParams?: any): Observable<Array<EmpfaengerDTO>>;

}
