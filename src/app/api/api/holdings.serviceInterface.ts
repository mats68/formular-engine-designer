/**
 * Next-Gen App API
 * Die REST Web-Schnittstelle zu der Next-Gen App Anwendung
 *
 * The version of the OpenAPI document: v1
 * Contact: info@brunnerinformatik.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { HoldingDTO } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface HoldingsServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Gibt alle Holdings mit dem angegebenen Limit zurück, absteigend sortiert nach Erstellt-Datum.
     * 
     * @param limit 
     * @param skip 
     */
    apiV1HoldingsGet(limit?: number, skip?: number, extraHttpRequestParams?: any): Observable<Array<HoldingDTO>>;

    /**
     * Gibt eine Holding mittels Guid zurück.
     * 
     * @param guid Primärer Schlüssel (Guid) einer Holding.
     */
    apiV1HoldingsGuidGet(guid: string, extraHttpRequestParams?: any): Observable<HoldingDTO>;

    /**
     * Löscht eine Holding
     * Die Holding wird nur dann gelöscht, wenn sie keine weiteren Abhängigkeiten hat.
     * @param id Primärer Schlüssel der Holding
     */
    apiV1HoldingsIdDelete(id: number, extraHttpRequestParams?: any): Observable<HoldingDTO>;

    /**
     * Gibt eine Holding mittels Mandant-Guid zurück.
     * 
     * @param guid Mandant Guid einer Holding.
     */
    apiV1HoldingsMandantGuidGet(guid: string, extraHttpRequestParams?: any): Observable<HoldingDTO>;

    /**
     * Insdert einer Holding
     * 
     * @param holdingDTO 
     */
    apiV1HoldingsPost(holdingDTO?: HoldingDTO, extraHttpRequestParams?: any): Observable<HoldingDTO>;

    /**
     * Update einer Holding hinzu
     * 
     * @param holdingDTO Holding
     */
    apiV1HoldingsPut(holdingDTO?: HoldingDTO, extraHttpRequestParams?: any): Observable<HoldingDTO>;

    /**
     * 
     * 
     * @param name 
     * @param limit 
     */
    apiV1HoldingsSearchGet(name?: string, limit?: number, extraHttpRequestParams?: any): Observable<Array<HoldingDTO>>;

    /**
     * Sucht nach Holdings im Namen mittels Suchbegriff.
     * 
     * @param text Suchbegriff, nach welchem gesucht werden soll. Der Text soll nicht leer sein.
     * @param limit Anzahl an Holdings die zurückgeliefert werden sollen. Wert zwischen 1 und 100. Default ist 10.
     * @param skip Anzahl von ausgelassenen Ergebnissen für Paging. z.B. 0 für erste Seite, 10 für zweite Seite.
     */
    apiV1HoldingsSuchenGet(text?: string, limit?: number, skip?: number, extraHttpRequestParams?: any): Observable<Array<HoldingDTO>>;

    /**
     * Gibt alle Holdings mit dem angegebenen Limit zurück, absteigend sortiert nach Erstellt-Datum.
     * ### Änderungen  - Auch Benutzer dürfen die Holdings sehen.  - Benutzer mit BerechtigungFuerAK dürfen auf die Console schreiben.
     * @param limit 
     * @param skip 
     */
    apiV2HoldingsGet(limit?: number, skip?: number, extraHttpRequestParams?: any): Observable<Array<HoldingDTO>>;

}
