/**
 * Next-Gen App API
 * Die REST Web-Schnittstelle zu der Next-Gen App Anwendung
 *
 * The version of the OpenAPI document: v1
 * Contact: info@brunnerinformatik.ch
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { ProduktLizenzDTO } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface ProduktLizenzenServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * Gibt alle ProduktLizenzen einer Holding zurück.
     * 
     * @param holdingGuId Primärer Schlüssel (Guid) einer Holding.
     */
    apiV1ProduktLizenzenAllHoldingGuIdGet(holdingGuId: string, extraHttpRequestParams?: any): Observable<Array<ProduktLizenzDTO>>;

    /**
     * Gibt die Anzahl verfügbaren Projekte der vorhandenen ProduktLizenzen zurück.
     * 
     * @param holdingguid Holding Guid
     */
    apiV1ProduktLizenzenAvailableGet(holdingguid?: string, extraHttpRequestParams?: any): Observable<number>;

    /**
     * ProduktLizenz Anzahl Verfügbare Projekte dekrementieren
     * 
     * @param holdingguid Holding-Guid der ProduktLizenz
     */
    apiV1ProduktLizenzenDecrementPut(holdingguid?: string, extraHttpRequestParams?: any): Observable<ProduktLizenzDTO>;

    /**
     * Gibt eine ProduktLizenz zurück.
     * 
     * @param guid Primärer Schlüssel (Guid)  einer ProduktLizenz.
     */
    apiV1ProduktLizenzenGuidGet(guid: string, extraHttpRequestParams?: any): Observable<ProduktLizenzDTO>;

    /**
     * Löscht eine ProduktLizenz
     * Die ProduktLizenz wird nur dann gelöscht, wenn sie keine weiteren Abhängigkeiten hat.
     * @param id Primärer Schlüssel der ProduktLizenz
     */
    apiV1ProduktLizenzenIdDelete(id: number, extraHttpRequestParams?: any): Observable<ProduktLizenzDTO>;

    /**
     * Insert einer ProduktLizenz
     * 
     * @param produktLizenzDTO 
     */
    apiV1ProduktLizenzenPost(produktLizenzDTO?: ProduktLizenzDTO, extraHttpRequestParams?: any): Observable<ProduktLizenzDTO>;

    /**
     * Update einer ProduktLizenz
     * 
     * @param produktLizenzDTO ProduktLizenzDTO
     */
    apiV1ProduktLizenzenPut(produktLizenzDTO?: ProduktLizenzDTO, extraHttpRequestParams?: any): Observable<ProduktLizenzDTO>;

}
